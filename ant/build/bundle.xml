<project name="griffon-bundle">
    <property name="targetDistDirectory" value="${griffon.dist}"/>
    <import file="maven.xml"/>

    <target name="create-guide" depends="build, javadoc" unless="fast" description="Builds the Griffon Guide">
        <taskdef name="docs"
                 classname="grails.doc.ant.DocPublisherTask"
                 classpathref="classpath" />

        <mkdir dir="${griffon.dist}" />
        <mkdir dir="target/manual" />
        <mkdir dir="target/manual/api" />
        <copy todir="target/manual/api">
            <fileset dir="${griffon.javadoc}"/>
        </copy>
        <copy todir="target/manual">
            <fileset dir="${basedir}/src/guide" includes="*.properties" />
        </copy>
        <replace dir="target/manual">
            <replaceFilter token="@griffon.version@" value="${griffon.version}" />
        </replace>
        <docs src="${basedir}/src/guide/sources"
              dest="target/manual"
              imagesdir="${basedir}/src/guide/resources/img"
              properties="target/manual/guide.properties" />


<!-- SKIP 
        <script language="javascript">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${griffon.build.cli}"/>
            </classpath>
        <![CDATA[
            importClass(java.io.File);
            importPackage(Packages.org.codehaus.griffon.documentation);
            outputdir = project.getProperty("griffon.target");
            griffonHome = project.getProperty("basedir");
            PdfBuilder.build(new File(outputdir).getCanonicalPath(), griffonHome);
        ]]></script>

        <move file="${basedir}/target/manual/guide/single.pdf"
            tofile="${basedir}/target/manual/griffon-${griffon.version}-manual.pdf" />
-->
        <zip basedir="target/manual" destfile="${griffon.dist}/griffon-guide-${griffon.version}.zip" />
    </target>

    <target name="-jar-app-files" description="Bundles all the template files for applications and plugins into a JAR files.">
        <!-- Clear the old JAR files out. -->
        <delete>
            <fileset dir="${griffon.target}" includes="griffon-*-files.jar"/>
        </delete>

        <!-- Files to integrate Griffon with IDEs and build systems. -->
        <jar destfile="${griffon.target}/griffon-integration-files.jar">
            <fileset dir="${basedir}/src/griffon/templates/ide-support"/>
            <fileset dir="${basedir}/src/griffon/ant"/>
        </jar>

        <antcall target="wrapper-package"/>
        <!-- Package up the files that are shared by both applications and plugins. -->
        <jar destfile="${griffon.target}/griffon-shared-files.jar">
            <fileset dir="${griffon.wrapper.target}/dist" />
<!--
            <fileset dir="${basedir}/src/griffon" includes="build.xml"/>
            <fileset dir="${basedir}/src/griffon/templates/ide-support/eclipse"/>
            <fileset dir="${basedir}/src/griffon/templates/ide-support/intellij"/>
            <fileset dir="${basedir}/src/griffon/templates/ide-support/textmate" includes="project.tmproj"/>
-->
        </jar>

        <!-- Package up the files that are exclusive to applications. -->
        <jar destfile="${griffon.target}/griffon-app-files.jar">
            <fileset dir="${basedir}/src/griffon">
                <include name="griffon-app/**"/>
            </fileset>
        </jar>

        <!-- Package up the files that are exclusive to plugins. -->
        <jar destfile="${griffon.target}/griffon-plugin-files.jar">
            <fileset dir="${basedir}/src/griffon/templates/plugins"/>
        </jar>
    </target>

    <target name="jar" depends="build,build-scripts,-jar-app-files" description="Build the entire source, run all tests and create the Griffon JAR file.">
        <delete>
            <fileset dir="${griffon.dist}" includes="*"/>
        </delete>
        <echo file="${griffon.dist}/build.properties">griffon.version=${griffon.version}
groovy.version=${groovy.version}</echo>
        <jar destfile="${griffon.dist}/griffon-cli-${griffon.version}.jar" manifest="${griffon.build.cli}/META-INF/MANIFEST.MF">
            <fileset dir="${griffon.build.cli}"/>
            <fileset dir="${griffon.build.rt}" includes="griffon/util/GriffonExceptionHandler.class"/>
            <file file="${griffon.dist}/build.properties"/>
            <fileset dir="${griffon.src.cli}" includes="**/*.gdsl"/>
        </jar>
        <jar destfile="${griffon.dist}/griffon-rt-${griffon.version}.jar" manifest="${griffon.build.rt}/META-INF/MANIFEST.MF">
            <fileset dir="${griffon.build.rt}"/>
            <file file="${griffon.dist}/build.properties"/>
        </jar>
        <jar destfile="${griffon.dist}/griffon-scripts-${griffon.version}.jar" manifest="${griffon.build.cli}/META-INF/MANIFEST.MF">
            <fileset dir="${griffon.target}/compiled-scripts"/>
        </jar>
        <jar destfile="${griffon.dist}/griffon-resources-${griffon.version}.jar" manifest="${griffon.build.cli}/META-INF/MANIFEST.MF">
            <fileset dir="${griffon.target}" includes="*.jar"/>
            <fileset dir="${basedir}">
                <include name="src/griffon/templates/artifacts/**"/>
            </fileset>
        </jar>
    </target>

    <target name="package-minimal" depends="clean,jar" description="Creates a minimal archive that can be used for integrating a Griffon project with an existing build system.">
        <property name="archive" value="griffon-${griffon.version}-minimal"/>

        <!-- The files to include in the minimal distribution. -->
        <patternset id="files.pkg.minimal">
            <include name="${griffon.dist}/*.jar"/>
            <include name="${griffon.lib}/*.jar"/>
            <include name="${griffon.dist}/build.properties"/>
            <include name="bin/**/*"/>
            <include name="conf/**/*"/>
            <include name="scripts/**/*"/>
            <include name="src/griffon/templates/scaffolding/**/*"/>
        </patternset>

        <delete failonerror="true">
            <fileset dir="${griffon.dist}">
                <include name="*-minimal.zip"/>
                <include name="*-minimal.tar.gz"/>
            </fileset>
        </delete>

        <!-- Create a ZIP distribution... -->
        <zip basedir="${basedir}" destfile="${griffon.dist}/${archive}.zip">
            <patternset refid="files.pkg.minimal"/>
        </zip>

        <!-- ... and a tarball one. -->
        <tar destfile="${griffon.dist}/${archive}.tar.gz" compression="gzip" longfile="gnu">
            <tarfileset dir="${basedir}">
                <patternset refid="files.pkg.minimal"/>
            </tarfileset>
        </tar>
    </target>

    <target name="package" depends="clean,test,jar" description="Create the release archives for Griffon.">
        <delete failonerror="true">
            <fileset dir="${griffon.dist}">
                <include name="properties"/>
                <include name="*.zip"/>
                <include name="*.tar.gz"/>
            </fileset>
        </delete>
        <delete dir="tmp" failonerror="true"/>
        <antcall target="create-binary-release"/>
        <antcall target="create-source-release"/>
    </target>

    <target name="install" depends="clean,test,jar" description="Installs the package into GRIFFON_HOME">
        <delete dir="tmp" failonerror="true"/>
        <antcall target="create-binary-release"/>
        <unzip src="${griffon.dist}/${griffon.dist.binary}.zip" dest="${env.GRIFFON_HOME}">
            <mapper type="regexp" from="griffon-${griffon.version}/(.*)" to="\1"/>
        </unzip>
        <chmod dir="${env.GRIFFON_HOME}" excludes="*.bat" perm="ugo+x"/>
    </target>

    <target name="-mavenPomDefinitions">
        <property name="pom.source.dir" value="${basedir}/maven/poms"/>
        <property name="pom.target.dir" value="${griffon.target}/poms"/>

        <!-- Clear any existing POMs out of the way first -->
        <delete dir="${pom.target.dir}"/>

        <!-- Copy the template POMs over to a target directory, inserting the Griffon version -->
        <copy todir="${pom.target.dir}">
            <fileset dir="${pom.source.dir}" includes="*.pom.in"/>
            <filterset>
                <filter token="griffon.version" value="${griffon.version}"/>
                <filter token="groovy.version" value="${groovy.version}"/>
            </filterset>
            <globmapper from="*.in" to="*"/>
        </copy>

        <maven.pom dir="${pom.target.dir}" id="griffon.pom"/>
        <maven.pom dir="${pom.target.dir}" id="griffon-cli.pom"/>
        <maven.pom dir="${pom.target.dir}" id="griffon-rt.pom"/>
        <maven.pom dir="${pom.target.dir}" id="griffon-resources.pom"/>
        <maven.pom dir="${pom.target.dir}" id="griffon-scripts.pom"/>
    </target>

    <target name="maven-install"
            depends="jar,-mavenInit"
            description="Installs the Griffon artifacts in the local Maven repository.">
        <mavenInstallRepo version="${griffon.version}" prefix="griffon"/>
        <mavenInstallRepo version="${griffon.version}" prefix="griffon-cli"/>
        <mavenInstallRepo version="${griffon.version}" prefix="griffon-rt"/>
        <mavenInstallRepo version="${griffon.version}" prefix="griffon-resources"/>
        <mavenInstallRepo version="${griffon.version}" prefix="griffon-scripts"/>
    </target>

    <target name="maven-deploy"
            depends="jar,-mavenDeployInit"
            description="Installs the Griffon artifacts in the appropriate remote Codehaus repository.">
        <mavenDeploy version="${griffon.version}" prefix="griffon"/>
        <mavenDeploy version="${griffon.version}" prefix="griffon-cli"/>
        <mavenDeploy version="${griffon.version}" prefix="griffon-rt"/>
        <mavenDeploy version="${griffon.version}" prefix="griffon-resources"/>
        <mavenDeploy version="${griffon.version}" prefix="griffon-scripts"/>
    </target>
</project>
