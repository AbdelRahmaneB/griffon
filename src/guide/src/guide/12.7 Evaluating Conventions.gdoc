Before moving onto looking at providing runtime configuration based on conventions you first need to understand how to evaluated those conventions from a plug-in. Essentially every addon provided by a plugin has access to an @app@ variable during its initialization. This variable is an instance of the [GriffonApplication|api:griffon.core.GriffonApplication] interface. From it you can access an @artifactManager@ property of type [ArtifactManager|api:griffon.core.ArtifactManager].

The @ArtifactManager@ class provides methods to evaluate the conventions within the project and internally stores references to all classes within a GriffonApplication using subclasses of [GriffonClass|api:griffon.core.GriffonClass] class.

A GriffonClass represents a physical Griffon resources such as a controller or a service. For example to get all @GriffonClass@ instances you can do:

{code:java}
app.artifactManager.allClasses.each { println it.name }
{code}

There are a few "magic" properties that the @ArtifactManager@ instance possesses that allow you to narrow the type of artifact you are interested in. For example if you only want to controllers you can do:

{code:java}
app.artifactManager.controllerClasses.each { println it.name }
{code}

Dynamic method conventions are as follows:

* @get*Classes@ - Retrieves all the classes for a particular artifact type. Example @app.artifactManager.getControllerClasses()@.
* @*Classes@ - Retrieves all the classes for a particular artifact type. Example @app.artifactManager.controllerClasses@.
* @is*Class@ - Returns true if the given class is of the given artifact type. Example @app.artifactManager.isControllerClass(ExampleController)@

The @GriffonClass@ interface itself provides a number of useful methods that allow you to further evaluate and work with the conventions. These include:

* @newInstance@ - Creates a new instance of the enclosed class.
* @getName@ -  Returns the logical name of the class in the application without the trailing convention part if applicable
* @getClazz@ - Returns the artifact class
* @getType@ - Returns the type of the artifact, i.e "controller"
* @getTrailing@ - Returns the suffix (if any) of the artifact, i.e "Controller"

For a full reference refer to the [javadoc API|api:griffon.core.GriffonClass].
