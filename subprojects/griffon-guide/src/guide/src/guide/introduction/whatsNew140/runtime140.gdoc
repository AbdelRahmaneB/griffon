h4. Event Classes

Developers now have the choice to send custom event classes through the application's event bus or any other event bus for that matter (classes implementing @[EventPublisher|api:griffon.core.EventPublisher]). Event handlers will be matched against the event's simple classname. For example, the following event class

{code}
import griffon.core.Event
import javax.sql.DataSource

@groovy.transform.Canonical
class DataSourceAvailable extends Event {
    final DataSource dataSource

    DataSourceAvailable(Object source, DataSource dataSource) {
        super(source)
        this.dataSource = dataSource
    }
}
{code}

can be used and handled in the following manner

{code}
@griffon.transform.EventPublisher
class JdbcConnector {
    void connect(ConfigObject config) {
        DataSource dataSource = ... // initialize
        publishEvent(new DataSourceAvailable(this, dataSource))
    }
}

connector = new JdbcConnector()
connector.addEventListener(DataSourceAvailable) { event ->
    // do something with event.dataSource
}
connector.connect(config)
{code}