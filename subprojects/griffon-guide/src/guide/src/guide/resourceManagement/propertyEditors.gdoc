Resource injection makes use of the [PropertyEditor|http://docs.oracle.com/javase/6/docs/api/java/beans/PropertyEditor.html] mechanism provided by the @java.beans@ package. The default @[ResourcesInjector|api:griffon.core.resources.ResourcesInjector]@ queries @[PropertyEditorManager|http://docs.oracle.com/javase/6/docs/api/java/beans/PropertyEditorManager.html]@ whenever a resource value must be transformed to a target type.

PropertyEditorManager provides methods for registering custom PropertyEditors, it also follows a class name convention to load PropertyEditors should a custom one is not programmatically registered. Griffon applications will automatically load and register PropertyEditors from the following classpath resource: @/META-INF/services/java.beans.PropertyEditor@. Each line follows the format

bc.
target.type = full.qualified.classname

The following table enumerates the default PropertyEditors loaded by Griffon at startup. Plugins such as [swing|http://artifacts.griffon-framework.org/plugin/swing] and [javafx|http://artifacts.griffon-framework.org/plugin/javafx] may register additional editors.

{table}
 *Type* | *Editor Class*
java.lang.String | griffon.core.resources.editors.StringPropertyEditor
java.io.File | griffon.core.resources.editors.FilePropertyEditor
java.net.URL | griffon.core.resources.editors.URLPropertyEditor
java.net.URI | griffon.core.resources.editors.URIPropertyEditor
{table}

The configuration (@/META-INF/services/java.beans.PropertyEditor@ inside griffon-rt-@griffon.version@.jar) for these editors is thus

{code}
java.lang.String = griffon.core.resources.editors.StringPropertyEditor
java.io.File = griffon.core.resources.editors.FilePropertyEditor
java.net.URL = griffon.core.resources.editors.URLPropertyEditor
java.net.URI = griffon.core.resources.editors.URIPropertyEditor
{code}
