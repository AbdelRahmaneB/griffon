/*
 * Copyright 2010-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

apply plugin: 'base'
apply plugin: 'idea'
apply plugin: 'build-dashboard'
apply from: 'gradle/idea.gradle'

evaluationDependsOn(':griffon-core')
evaluationDependsOn(':griffon-core-compile')
evaluationDependsOn(':griffon-guice')
evaluationDependsOn(':griffon-groovy')
evaluationDependsOn(':griffon-groovy-compile')
evaluationDependsOn(':griffon-swing')
evaluationDependsOn(':griffon-swing-builder')
evaluationDependsOn(':griffon-javafx')
evaluationDependsOn(':griffon-javafx-builder')
evaluationDependsOn(':integration-swing')
evaluationDependsOn(':integration-swing-groovy')
evaluationDependsOn(':integration-javafx')
evaluationDependsOn(':integration-javafx-groovy')

// if (!project.hasProperty('lint')) project.ext.lint = false

Date buildTimeAndDate = new Date()
ext {
    buildTime = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildDate = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    mavenizedProjects = [
        project(':griffon-core'),
        project(':griffon-core-compile'),
        project(':griffon-groovy'),
        project(':griffon-groovy-compile'),
        project(':griffon-guice'),
        project(':griffon-swing'),
        project(':griffon-javafx'),
        project(':griffon-swing-builder'),
        project(':griffon-javafx-builder')
    ]
}

subprojects { subproj ->
    apply plugin: 'idea'
    apply from: "${rootDir}/gradle/publish.gradle"

    if (plugins.hasPlugin('java')) {
        group = 'org.codehaus.griffon'

        apply from: "${rootDir}/gradle/coverage.gradle"
        apply from: "${rootDir}/gradle/codeQuality.gradle"
    }

    configurations {
        compileOnly
    }

    repositories {
        jcenter()
        mavenCentral()
        maven {
            name 'Kordamp'
            url 'http://dl.bintray.com/content/aalmiray/kordamp'
        }
    }

    dependencies {
        testCompile 'junit:junit:4.11'
        testCompile 'com.google.guiceberry:guiceberry:3.3.1'
        testCompile("com.google.inject:guice:$guiceVersion") {
            exclude group: 'org.sonatype.sisu.inject'
        }
        testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
        testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
        testCompile "org.slf4j:slf4j-simple:$slf4jVersion"
    }

    /*
    compileJava {
        doFirst {
            if (project.ext.lint) {
                options.compilerArgs = [
                    '-Xlint:all', '-Xlint:deprecation', '-Xlint:unchecked'
                ]
            }
        }
    }
    */

    sourceSets {
        main {
            compileClasspath += configurations.compileOnly
        }
    }

    javadoc {
        classpath += configurations.compileOnly
    }

    idea {
        module {
            scopes.PROVIDED.plus += configurations.compileOnly
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    if (subproj in project.mavenizedProjects) {
        jar {
            manifest {
                attributes(
                    'Built-By': System.properties['user.name'],
                    'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.getProperty("java.vm.version") + ")",
                    'Build-Date': buildTime,
                    'Build-Time': buildDate,
                    'Specification-Title': subproj.name,
                    'Specification-Version': subproj.version,
                    'Specification-Vendor': 'griffon-framework.org',
                    'Implementation-Title': subproj.name,
                    'Implementation-Version': subproj.version,
                    'Implementation-Vendor': 'griffon-framework.org'
                )
            }
        }
    }
}
