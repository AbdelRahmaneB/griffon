buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath 'org.codehaus.griffon:gradle-griffon-plugin:2.6.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.codehaus.griffon.griffon'

griffon {
    disableDependencyResolution = false
    includeGroovyDependencies = false
    version = '2.6.0'
    toolkit = 'javafx'
}

ext {
    macosx = System.getProperty('os.name').contains('Mac OS')
}

mainClassName = 'org.example.Launcher'

apply from: 'gradle/publishing.gradle'
apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/javafx-plugin.gradle'
apply from: 'gradle/integration-test.gradle'
apply from: 'gradle/functional-test.gradle'
apply from: 'gradle/docs.gradle'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'com.github.ben-manes.versions'

javafx {
    mainClass = mainClassName
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.8'

    compile "org.codehaus.griffon:griffon-guice:${griffon.version}"
    compile 'org.kordamp.bootstrapfx:bootstrapfx-core:0.1.0'
    compile 'org.kordamp.ikonli:ikonli-javafx:1.5.0'
    compile 'org.kordamp.ikonli:ikonli-typicons-pack:1.5.0'
    compile 'org.reactfx:reactfx:2.0-M5'
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-jackson:2.0.0-beta2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.4'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.4'
    compile 'io.reactivex:rxjava:1.1.5'

    griffon 'org.codehaus.griffon.plugins:griffon-miglayout-plugin:1.1.1'
    runtime 'org.slf4j:slf4j-simple:1.7.16'

    testCompile "org.codehaus.griffon:griffon-javafx-test:${griffon.version}"
    testCompile 'org.mockito:mockito-core:2.0.54-beta'

    // functionalTestCompile "org.codehaus.griffon:griffon-javafx-test:${griffon.version}"
    // functionalTestCompile 'org.mockito:mockito-core:2.0.54-beta'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
}

startScripts {
    doLast {
        if (!macosx) unixScript.text = unixScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
        windowsScript.text = windowsScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
    }
}
