<project name="console-swing-groovy" default="compile" basedir=".">
    <property name="version" value="0.1.0"/>                            <!--1-->
    <property name="group" value="org.codehaus.griffon.samples"/>
    <property name="application.main.class" value="console.Launcher"/>
    <property name="build.main.output" value="target/classes/main"/>
    <property name="build.test.output" value="target/classes/test"/>
    <property name="build.test.reports" value="target/reports/tests"/>
    <property name="project.lib.dir" value="${basedir}/lib"/>

    <path id="build.classpath">                                         <!--2-->
        <fileset dir="${project.lib.dir}/build">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="provided.classpath">                                      <!--2-->
        <fileset dir="${project.lib.dir}/provided">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="compile.classpath">                                       <!--2-->
        <fileset dir="${project.lib.dir}/compile">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="runtime.classpath">                                       <!--2-->
        <fileset dir="${project.lib.dir}/runtime">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">                                          <!--2-->
        <fileset dir="${project.lib.dir}/test">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef name="groovyc"
             classname="org.codehaus.groovy.ant.Groovyc"
             classpathref="build.classpath"/>                           <!--3-->

    <target name="clean">
        <delete dir="${build.main.output}"/>
        <delete dir="${build.test.output}"/>
        <delete dir="${build.test.reports}"/>
    </target>

    <target name="compile">
        <mkdir dir="${build.main.output}"/>
        <groovyc
            destdir="${build.main.output}">                             <!--4-->
            <src path="griffon-app/conf"/>
            <src path="griffon-app/controllers"/>
            <src path="griffon-app/models"/>
            <src path="griffon-app/services"/>
            <src path="griffon-app/views"/>
            <src path="griffon-app/lifecycle"/>
            <src path="src/main/groovy"/>
            <classpath>
                <path refid="provided.classpath"/>
                <path refid="compile.classpath"/>
                <pathelement location="${build.main.output}"/>
            </classpath>
        </groovyc>
        <copy todir="${build.main.output}">
            <fileset dir="griffon-app/i18n"/>
            <fileset dir="griffon-app/resources"/>
            <fileset dir="src/main/resources"/>
        </copy>
    </target>

    <target name="run" depends="compile">                               <!--5-->
        <java classname="${application.main.class}"
              fork="true">
            <classpath>
                <path refid="compile.classpath"/>
                <path refid="runtime.classpath"/>
                <pathelement location="${build.main.output}"/>
            </classpath>
        </java>
    </target>

    <target name="compile-tests" depends="compile">                     <!--6-->
        <mkdir dir="${build.test.output}"/>
        <groovyc destdir="${build.test.output}">
            <src path="src/test/groovy"/>
            <classpath>
                <path refid="provided.classpath"/>
                <path refid="compile.classpath"/>
                <path refid="test.classpath"/>
                <pathelement location="${build.main.output}"/>
                <pathelement location="${build.test.output}"/>
            </classpath>
        </groovyc>
        <copy todir="${build.test.output}">
            <fileset dir="src/test/resources"/>
        </copy>
    </target>

    <target name="test" depends="compile-tests">                        <!--7-->
        <mkdir dir="${build.test.reports}"/>
        <junit printSummary="yes" haltonerror="true" haltonfailure="true"
               fork="true" dir="." forkmode="once">
            <sysproperty key="basedir" value="."/>
            <formatter type="xml"/>
            <formatter type="plain" usefile="true"/>
            <classpath>
                <path refid="test.classpath"/>
                <path refid="compile.classpath"/>
                <path refid="runtime.classpath"/>
                <pathelement location="${build.main.output}"/>
                <pathelement location="${build.test.output}"/>
            </classpath>
            <batchtest todir="${build.test.reports}">
                <fileset dir="${build.test.output}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
</project>
