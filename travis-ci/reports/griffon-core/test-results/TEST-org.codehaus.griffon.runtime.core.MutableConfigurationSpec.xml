<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" tests="79" skipped="0" failures="0" errors="0" timestamp="2015-08-19T16:54:53" hostname="testing-worker-linux-968a87ce-2-2279-linux-12-76305112" time="0.069">
  <properties/>
  <testcase name="Calling configuration.get(key.string, null) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.015"/>
  <testcase name="Calling configuration.get(key.string, foo) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.get(key.foo, null) returns null" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.get(key.foo, foo) returns foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.getAsString(key.string, null) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.getAsString(key.string, foo) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.getAsString(key.foo, null) returns null" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.getAsString(key.foo, foo) returns foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.set(key.boolean.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.boolean.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.int.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.int.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.long.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.long.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.float.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.float.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.double.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.double.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Check containsKey after removal" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.set(key.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.boolean.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.boolean.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.int.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.int.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.long.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.long.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.float.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.float.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.double.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.double.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.boolean.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.boolean.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.int.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.int.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.long.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.long.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.float.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.float.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.double.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.double.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.foo) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@f3166b9; key=key.string; value='string'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.boolean.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6415cf1f; key=key.boolean.type; value='true'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.boolean.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@36d44bdf; key=key.boolean.string; value='true'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.int.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@19f14477; key=key.int.type; value='42'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.int.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@1df1ed5e; key=key.int.string; value='21'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.long.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@57d6b4c8; key=key.long.type; value='64'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.long.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@4348875e; key=key.long.string; value='32'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.float.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@5009a1bc; key=key.float.type; value='3.1416'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.float.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@42003dfe; key=key.float.string; value='6.2832'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.double.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@2092b182; key=key.double.type; value='3.1416'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.double.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3a7ef1b8; key=key.double.string; value='6.2832'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.foo
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@79d2d4c4; key=key.foo; value='foo'
]]></system-err>
</testsuite>
