<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="griffon.util.GriffonClassUtilsSpec" tests="272" skipped="0" failures="0" errors="0" timestamp="2015-06-04T11:30:40" hostname="testing-worker-linux-85ee80ed-1-1752-linux-5-65389897" time="0.153">
  <properties/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.01"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.Locale, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResource(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.004"/>
  <testcase name="isResourceResolverMethod() returns true for 'public resolveResourceValue(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns true for 'public formatResource(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceResolverMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runInsideUISync(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isResourceHandlerMethod() returns false for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns true for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isEventPublisherMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public resolveMessageValue(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public asResourceBundle()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public formatMessage(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Map, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Locale)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.List, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.util.Locale, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns true for 'public getMessage(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMessageSourceMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.005"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public mvcGroupInit(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public mvcGroupDestroy()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getMvcGroup()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getLog()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getApplication()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getGriffonClass()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runInsideUISync(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public createMVC(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isMvcMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isMvcMethod() returns false for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runInsideUISync(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isThreadingMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isThreadingMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addVetoableChangeListener(java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removeVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removeVetoableChangeListener(java.beans.VetoableChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getVetoableChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getVetoableChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public getPropertyChangeListeners()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns true for 'public removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns false for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns false for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns false for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isObservableMethod() returns false for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public getLog()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getApplication()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getGriffonClass()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runFuture(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runFuture(java.util.concurrent.ExecutorService, java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runInsideUIAsync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runInsideUISync(java.util.concurrent.Callable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runInsideUISync(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public runOutsideUI(java.lang.Runnable)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public isUIThread()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVC(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVCGroup(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.util.Map, java.lang.String, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.lang.String, java.lang.String, java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public createMVC(java.util.Map, java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public destroyMVCGroup(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.util.Map, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, java.util.Map, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public withMVCGroup(java.lang.String, griffon.core.mvc.MVCGroupFunction)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getResourceAsURL(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getResourceAsStream(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public getResources(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns true for 'public classloader()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public removeEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventOutsideUI(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEventAsync(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public setEventPublishingEnabled(boolean)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public isEventPublishingEnabled()'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.Object)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.util.Map)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.String, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.RunnableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public addEventListener(java.lang.Class, griffon.core.CallableWithArgs)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(java.lang.String)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(java.lang.String, java.util.List)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.0"/>
  <testcase name="isArtifactMethod() returns false for 'public publishEvent(griffon.core.event.Event)'" classname="griffon.util.GriffonClassUtilsSpec" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
