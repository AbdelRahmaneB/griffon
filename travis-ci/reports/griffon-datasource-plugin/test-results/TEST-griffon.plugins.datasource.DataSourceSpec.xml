<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="griffon.plugins.datasource.DataSourceSpec" tests="15" failures="0" errors="0" timestamp="2014-02-14T18:10:49" hostname="testing-worker-linux-9-2-26990-linux-7-18895936" time="12.817">
  <properties/>
  <testcase name="Open and close default dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="5.279"/>
  <testcase name="Connect to default dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.688"/>
  <testcase name="Open a connection to default dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="1.381"/>
  <testcase name="Can connect to default dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.52"/>
  <testcase name="Can connect to internal dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.49"/>
  <testcase name="Can connect to people dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.525"/>
  <testcase name="Can open a connection to default dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.405"/>
  <testcase name="Can open a connection to internal dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.441"/>
  <testcase name="Can open a connection to people dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.425"/>
  <testcase name="Bogus dataSource name (null) results in error" classname="griffon.plugins.datasource.DataSourceSpec" time="0.432"/>
  <testcase name="Bogus dataSource name () results in error" classname="griffon.plugins.datasource.DataSourceSpec" time="0.471"/>
  <testcase name="Bogus dataSource name (bogus) results in error" classname="griffon.plugins.datasource.DataSourceSpec" time="0.449"/>
  <testcase name="Execute statements on people dataSource" classname="griffon.plugins.datasource.DataSourceSpec" time="0.611"/>
  <testcase name="A runtime SQLException is thrown within dataSource handling" classname="griffon.plugins.datasource.DataSourceSpec" time="0.344"/>
  <testcase name="A runtime SQLException is thrown within connection handling" classname="griffon.plugins.datasource.DataSourceSpec" time="0.321"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3c4bb879
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@f3c2edc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@38287554
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@682efa99
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@6446883e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@48dc7d5f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3ab0d58, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@52f90e49, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@5d19052d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@15a2fd1b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7f9702b5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1332fa84, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@77dcf9f4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4c9e3fa6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@2964d296, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3305173f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@7ecda36b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@79fe3f51
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@22ef1d69
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@73ea6a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3a22d561
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxWait; value='60000'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener com.sun.proxy.$Proxy30 on DataSourceConnectStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener com.sun.proxy.$Proxy30 on DataSourceConnectEnd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener com.sun.proxy.$Proxy30 on DataSourceDisconnectStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener com.sun.proxy.$Proxy30 on DataSourceDisconnectEnd
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@22a4bea0; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceDisconnectStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceDisconnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4c74f6b9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@12f212e6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@52b6c3c1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@5cedde53
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@49f4acf
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6a8df8aa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@ec0978d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@61db18c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7736177, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2803cf73, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@12289b8b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@27fbcbfd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@40d638d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@b02c00f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@618f1e6e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@251c086c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@57146eaf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@25d2845a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1fef441c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@15609aa5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7948d199
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43f69b79; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@747f32b2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@4ad97fde
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@d59ee36
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@b262213
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7487131c
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@34c7955, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@11b1bd24, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2bf88f8f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4b990bd6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2cd83560, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@269848a0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@57c8142b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@10a44013, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f6aa7ee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@2337022a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@35b6d76c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@27dca19b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@b4d5b34
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@39eb8b8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@297139e3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@488f7b56
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6a738a66; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4ff67d05
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@3f89fc46
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@7c117840
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@5eedf162
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@5782899e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6aa8217b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@442e48f1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3ab6e92f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@3e872ac6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c094d3c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@26adac85, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@54196399, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4ed9fcf1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@496d5aa8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@2a5af141, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@76a62840
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@603adbda
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@337688d3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2b10ef0a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@64bd8f9c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@591f7e6f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b9e714c; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@6ce853d1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@8d6f633
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@58bd92cd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@5f0fe3f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@10c3dd25
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@57a01ca7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@50b944e2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@33597ad5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@378f5049, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@21e0051e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7a7005f1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@50965003, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c5f1e4a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@8bdab3d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5c353646, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3b4842a2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@6d50ddba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6b9f78ba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@32af3289
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@c1eda5e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3d925789
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@614b3189; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'internal'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@457105b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@7f2c896d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@44f29455
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@11e87bd0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@36189ddf
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7078c2bb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@838bcad, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@44eb0612, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@21dbab17, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5cbd845e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1e3d66e3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@512dd097, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@16d99324, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@264b2c34, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@11431d90, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@68bbea7f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@2d7c42d4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1e28a31b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@7dec5114
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@25bf38a2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@2d1f270a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7de2ec8e; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[people].dbCreate was set to 'create' but people-schema-dev.ddl was not found in classpath.
[Test worker] INFO org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - Initializing schema on 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4991b0eb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@7bf63a08
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@625c22cc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@ef0b187
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@5c171dba
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@741824de, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5d1ca65d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3ee536d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@13a71b1f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3fe59a4d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7af55600, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@e15911, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4a9e6b8a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@66a6574b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@32ad3193, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@87d66d5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@5092a298
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@51df5caf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1f3e0f27
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2354d977
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@179125c0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@20d4ee30; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@39346bcc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@20913b6b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@1ed3fe81
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@6fe9d6f6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@611fe9e0
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@361eb515, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1a029175, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@1e9ba5aa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7c994b98, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@34322810, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@48e44d35, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@488f7f6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c4f39cd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@755be0a9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@62fab370, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@66eb6899
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@670d705e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@165438da
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@73607ba9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4356cf6c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@784bddfd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@35b9f7df; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'internal'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@212edbb3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@b59d5ca
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@36e2c698
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@625c414e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@16c39a55
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@152818d1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7b754c30, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@51dd22a2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@d0ce3ab, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4936f63e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@376085ff, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@21fd44c0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7aacaaae, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5df9c46d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@38cf004e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@5e5a6f01
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@784bae8d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@58053ef7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@4068f746
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2b4235b3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7d390f5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@158d4b0d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[people].dbCreate was set to 'create' but people-schema-dev.ddl was not found in classpath.
[Test worker] INFO org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - Initializing schema on 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4ae0aad1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@63eea5be
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@48c39033
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1f302997
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@12fa8880
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3e469529, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@bead6b0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@66b4c2ec, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@656948a1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@631f760a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@267ebd5d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4ac23869, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@15059bd7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@233a4b09, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@48144df0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2a99f941
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@3c62de83
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1a18dc13
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@561870c7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5e9444f9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@583c67f1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@41936a30; key=dataSource.pool.maxWait; value='60000'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@e661744
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@508178be
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@641e2b3c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@78a8a37d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@785a16e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2e512f9c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@540cc285, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@11b6d4df, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7a51858e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7e176c5e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@33cbcffe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@9c44743, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@352284b7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6d3725a1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3f87a50b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@47bc2fd3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@5ed68cb5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@101cd25f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5437633c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@542356
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@13dbe345
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3b1c4405; key=dataSource.pool.maxWait; value='60000'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7110bf24
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@2750e7a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@53096cd8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@fc9037f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@56048ef1
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@1b73b3fa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@492cf02a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@254b7aee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7e73b262, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5dc480c9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@fe33c37, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f864707, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@38a12487, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5b65381c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5246e524, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@6af3a7d5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@12e68e49
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@35e376fb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@68987460
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@71008045
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@57e56bf8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@37e367f4; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7c23bb8c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@dee2400
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@d7d8325
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2b2cf90e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@15931c47
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3a163442, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7c0f6d9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@d8e2489, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6f00a552, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1365e36d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@636130e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@481cff51, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@67be43d3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7c5706da, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@358311fc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@6fc2a5bf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@7c31c1ef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@124a7b26
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@57db052b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6c30771c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@61dc06c1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@25eff84d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[people].dbCreate was set to 'create' but people-schema-dev.ddl was not found in classpath.
[Test worker] INFO org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - Initializing schema on 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'people'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3bb5309a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@7489ed15
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@b2c3979
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4713caa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2645bf2d
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@799ff17d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@73a783ec, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@7ac63645, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6b152afb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3ab8fba9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4692325d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@28289bdd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@210dec4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@219116eb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3c77af84, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@506cff4b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@5640d6f2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@28ebad43
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@8bc1eb2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@76833c98
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@21ff5bf1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@43cefb4d; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
Feb 14, 2014 6:11:02 PM groovy.sql.Sql executeUpdate
WARNING: Failed to execute: insert into people (id) values (?) because: Table "PEOPLE" not found; SQL statement:
insert into people (id) values (?) [42102-170]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0-SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-14T18:05:37.926+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'dataSource'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'dataSource', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, dataSource, groovy, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4a27dbfc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from dataSource:org.codehaus.griffon.runtime.core.DataSourceModule@7edba36c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from groovy:org.codehaus.griffon.runtime.groovy.GroovyModule@5c64885
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1cc316b9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4c08da6f
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@289d259d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.groovy.util.GroovyAwareCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@65107b3f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@1d0b98ef, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@646581ce, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.groovy.mvc.GroovyAwareMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@442d2ee0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@72609717, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@235fa1ab, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5b6ef3b1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5141185c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=dataSource), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@8a669b1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, classifier=@javax.inject.Named(value=dataSource), target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceStorage, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceStorage, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceFactory, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.datasource.DataSourceHandler, target=org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.util.ConfigReader, providerType=class griffon.util.ConfigReader$Provider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.GriffonAddon, classifier=@javax.inject.Named(value=groovy), target=org.codehaus.griffon.runtime.groovy.GroovyAddon, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.BuilderCustomizer, classifier=@javax.inject.Named(value=core), target=griffon.builder.core.CoreBuilderCustomizer, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1822bbe7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/aalmiray/griffon2/subprojects/griffon-core/build/libs/griffon-core-2.0.0-SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - Current addon order is [groovy]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing addon 'groovy'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding addon 'groovy', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - addon dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is [groovy]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addon groovy with class org.codehaus.griffon.runtime.groovy.GroovyAddon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.groovy.GroovyAddon@3145028a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loaded addon groovy
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1273e5f0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@76fcf906
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5a4135f1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@6f3c8f81
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources; value='{people={url=jdbc:h2:mem:griffon-datasource-plugin-people, password=, username=sa, driverClassName=org.h2.Driver, dbCreate=create}, internal={url=jdbc:h2:mem:griffon-datasource-plugin-internal, password=, driverClassName=org.h2.Driver, schema=false, username=sa}}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.url; value='jdbc:h2:mem:griffon-datasource-plugin-people'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.url; value='jdbc:h2:mem:griffon-datasource-plugin-internal'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.schema
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.schema; value='false'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxIdle
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxIdle; value='5'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.password
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.password; value=''
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.internal.username
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.internal.username; value='sa'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.driverClassName
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.driverClassName; value='org.h2.Driver'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.url
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.url; value='jdbc:h2:mem:griffon-datasource-plugin-dev'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSources.people.dbCreate
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSources.people.dbCreate; value='create'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxActive
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxActive; value='8'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource.pool.maxWait
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource.pool.maxWait; value='60000'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=dataSource
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@679328f5; key=dataSource; value='{dbCreate=create, driverClassName=org.h2.Driver, pool={maxIdle=5, maxActive=8, maxWait=60000}, password=, username=sa, url=jdbc:h2:mem:griffon-datasource-plugin-dev}'
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectStart' synchronously
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but default-schema.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema-dev.ddl was not found in classpath.
[Test worker] WARN org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but schema.ddl was not found in classpath.
[Test worker] ERROR org.codehaus.griffon.runtime.datasource.DefaultDataSourceFactory - DataSource[default].dbCreate was set to 'create' but no suitable schema was found in classpath.
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'DataSourceConnectEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.datasource.DefaultDataSourceHandler - Executing statements on dataSource 'default'
Feb 14, 2014 6:11:02 PM groovy.sql.Sql executeUpdate
WARNING: Failed to execute: insert into people (id) values (?) because: Table "PEOPLE" not found; SQL statement:
insert into people (id) values (?) [42102-170]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
]]></system-err>
</testsuite>
