<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.shiro.ShiroSpec" tests="20" failures="0" errors="0" timestamp="2014-03-16T18:32:13" hostname="testing-worker-linux-7-1-9759-linux-1-20889326" time="6.164">
  <properties/>
  <testcase name="Guest with guest has outcome guest" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="2.497"/>
  <testcase name="Guest with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.353"/>
  <testcase name="Guest with authenticated has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.299"/>
  <testcase name="Guest with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.284"/>
  <testcase name="Guest with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.253"/>
  <testcase name="User bob with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.275"/>
  <testcase name="User bob with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.218"/>
  <testcase name="User bob with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.207"/>
  <testcase name="User bob with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.192"/>
  <testcase name="User bob with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.169"/>
  <testcase name="User joe with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.151"/>
  <testcase name="User joe with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.147"/>
  <testcase name="User joe with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.136"/>
  <testcase name="User joe with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.135"/>
  <testcase name="User joe with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.136"/>
  <testcase name="User root with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.165"/>
  <testcase name="User root with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.124"/>
  <testcase name="User root with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.123"/>
  <testcase name="User root with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.12"/>
  <testcase name="User root with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.121"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@47f91609
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3215cdc9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@357960cf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@33c2d176
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2bab91af, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@ce98e8f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@398e54e8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2f6868dd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6fbc9d7b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@48072f8c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4fc2b545, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@780aedeb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@158a1cdf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@14b5a6e0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No identity (PrincipalCollection) found in the context.  Looking for a remembered identity.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No remembered identity found.  Returning original context.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@48a130d1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@4e8c0e97
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4d1203ca
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@59b6ea4d
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ea320c1.after() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@545b1bd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2297f1ff
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2590ae17
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3d957b45
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2554c68, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@2e0b410a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@64db0f23, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@69bef68f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@782d5c85, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6a155d66, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@20a709f3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@367e4144, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1aeef34f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1d82e71
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@550596c2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@61ecc629
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7fc5dff8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@17f35451
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3ac98487.after() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@24f1b398
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7845d31a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@30268da6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@331da5fc
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@5de59c16, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@d6a9883, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@5142c756, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@772d08c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2d9b7df1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3b69709b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@75fee96, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2b28bda2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7fb9ecd0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@58e83637
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4745874e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@25b63670
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5db00667
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@4f74843e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed authentication challenge on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.authenticated was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@389ce1bb.after() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@357ff62f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@63fba319
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1d90f197
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@16e4ffab
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@5b765f56, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@386d3603, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@9f51be6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@3afa9e25, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1ba4ad63, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@58734cc2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@79b481eb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@39bda9b9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@52d1ce4c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@615b20f0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@66501729
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1420b939
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@70605781
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@45110fca
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@57391cbb.after() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7a90da23
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3be16eb2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4d2a86d4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@22f9efe0
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@177d59d4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@26947958, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@5daa9431, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@69e74d01, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5070b2f8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@16f5e10a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6889634c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@13d64832, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@591dd4ca, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@34fd57cf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@643af383
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5a4950dd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@35c0b7a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@ff5784f
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@542487b1.after() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4845d9d8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@61e118f9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@12eb5a3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@5b0b35c5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3cf74735, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@e6407d8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@493efd49, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4666e930, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@e57726c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f1917cf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@386a1ec7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3f0ab7c0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2d6d4204
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4ed98965
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2bcb6e54
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@38b86342
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@517c9f25
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5efb2e7b.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cf6c19e
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [8821e0ce-3bc8-49c3-941d-db7878f786e5]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@61443ce2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@46f94b51
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@18bfd73e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@5acc3423
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@f4080ae, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@53c02754, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@6c5626c0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@c0a3ed1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@74a21183, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c2beb47, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6763a12d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3deac662, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@866bb0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3d8119d7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6a9173dd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@734de8d3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7ff0afc8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@12a4b517
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2bbf1522.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79f48a5b
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [4b401542-0d04-44f1-819f-cb3c7a1a0228]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@1eab8bf6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1071d335
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@20e14502
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2579972b
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@99feb0d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6200a76a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@18ef526a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@80bb9f0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@39dc3fb0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2ad9597d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@23823385, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@390472f9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@531856ad, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@5e5232a8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6fac978a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2c111e4d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@17dc67d5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@724dd30
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6323b2be.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@40160f3d
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [69fc6726-3dbd-4316-984c-f2d1e11b0c98]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@41db0032
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@10e9f465
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@6fac1b8f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@c458290
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7301c3be, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@78da29ee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3af7063e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2fbaeeb0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@198c7d4b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5675d407, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@51b343e9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@502f9fe6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@66aade2a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@31b40327
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3c19a5b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@37cce4a3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6cb6a5f3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@4b492c47
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@273a70db.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@d2b24c7
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [cc9828a9-b526-45c0-ba8f-414e5501a516]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@5c082421
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1a7c21bb
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4b8a8992
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@744df6fc
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6d4f0202, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5e0d095e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@29e22a8f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@3f5827c4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@349ad559, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@212ce10a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@96a688a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@28f540da, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7d74bd37, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@831ebd9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6e6175da
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@408073d3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@313442ba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@5e08da92
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@75fbe6b7.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7fbaa013
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [abc96616-b14c-49df-b131-cd2425cda801]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@17a41aba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@16d6b576
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@6a2361b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@38e2a040
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@62a2e55d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@34806f42, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@5c0870fb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2e319df1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3b7850e8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5807cdd8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@685b4d0e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@422007a8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@44d6c882, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@71b92c9b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6e5d9c6d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@43c8f0b6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3d335f7e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@77c26895
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@709633dc.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2470202e
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [cfa92eb5-bb52-4b9d-9378-bd0ffd468477]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@17b791
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@151490a3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7923c824
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1c28f19e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2711815d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6e4414b4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@37ab6dfa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@57c154a3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@559bc657, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@65faa5a9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2a922e8d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@632e40d0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@71a14a8e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@112da053
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@22c2222
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1f74e74b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@33fcfd0f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@2649fe73
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@59e9c94.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7cbc11d
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [d7412e75-6b1f-4f61-bba2-be176ec3e8a1]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3fd5e2ae
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@73152e3f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@738f651f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4b38117e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@cf7ea2e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@682f78a8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@49a9308, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@402af494, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@441f4175, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@60028b43, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@47050cf3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c9549f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@d29bd87, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@592b8d07
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@78561bc6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5d39a1e2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@72b32c3e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@511dd546
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4fa7b2bf.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@70ee5558
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [96b32b6a-d6ba-472c-b270-c03e75af7fdd]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@361f14fa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@329a44d8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2e1ddadc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2a0bb92b
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3c76e596, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@21daf9dd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2f4a2d88, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2ef353f9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@690e1883, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c6b7657, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@53265854, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7a711d71, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@18442484, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@6fd9178
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4d6775bd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@4362f2fe
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@153f2442
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@646573f3
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7662bc77.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@20b63513
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [810da21a-66cd-4373-a360-74072a0cbf1d]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4bd16ded
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2288097e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@112740e8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@28164824
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2361929c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5ae051e9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3d21c69b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@74760977, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@71679f5c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4a0f8b2e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@427a9efe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5c57cb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2e87d09c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@73f545b2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3da23132
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@634be93a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@cbd11c4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@50d96164
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@e3157a8.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@696f551d
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [6813233a-1575-445d-b95e-d3a0f1f15015]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@e5cccb5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@6e838670
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7cef5bbe
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@46705706
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6bc137c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5a352115, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@560f17f7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@78ee8544, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@736f7162, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@197d1423, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@62b512e7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5dec2e51, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3cd4f803, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@66bdb05
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6ec63f2c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@195d9a85
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@504b9ec5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@14a4c0b2
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3d72d061.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@351f3b0c
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [bb0d7980-b951-4a3d-b1a9-ca9ff1fbd957]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@10a80d4e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@901846d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@429d14b9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@56bb9fd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@63a742e3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7a187831, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@5c7b1796, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1549a849, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@16c75b8a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7a4accb4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@44c57c25, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1598469, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c040a30, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@53c01def
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6a7e1606
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@7bd81a88
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@28b6163d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@4a6e13ac
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49a66568.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@921d7f9
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [ff967bdc-10fb-4b37-a851-0fa124722e77]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@5f243f31
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@44b0dac3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@36ea5b70
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@5419323a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@8a553bb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1e1c1e6c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@481153e5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@699b0459, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@403aa539, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4a356220, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@76bd48ef, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4ff7fd0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@22203340, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@4c438fce
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@44177e34
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@625eaad8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@35227d5c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@6b543e44
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@1dfedd5c.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4a4038e2
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [72357cab-86d3-4798-8034-c2ff0658447c]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@2a090d6e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3850c651
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3f0c0cb9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@30176605
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@31a596b9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6e4a6525, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@563698b4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1a637da4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@79cda784, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2cb10995, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1aec2c1f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@744b508, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2fc923f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3bbf7d30
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5c46ff4c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@392305e8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2a58dfa6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@30c32102
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@14483946.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6d25eb3
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [a2f718ab-1be6-4d3e-b0c1-efe6646843b9]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-03-16T18:23:23.217+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@70076b33
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@770f1aba
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@a3e667
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@86b7485
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7dd8594c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6cecd20, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@72fcf35d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@3ccd99a5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5e223ed2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1a4a7d46, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@10668c26, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c7b1b33, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3636d04a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@16452e85
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@244ff48e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@7d40a941
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@20282aa5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@2d07c721
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7ac7a3bb.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@53a09164
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [3581f02a-46b1-4ddd-91e4-7f918fe99201]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
]]></system-err>
</testsuite>
