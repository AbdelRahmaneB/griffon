<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.shiro.ShiroSpec" tests="20" failures="0" errors="0" timestamp="2014-02-26T09:25:09" hostname="testing-worker-linux-5-1-21897-linux-6-19637608" time="5.964">
  <properties/>
  <testcase name="Guest with guest has outcome guest" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="2.474"/>
  <testcase name="Guest with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.333"/>
  <testcase name="Guest with authenticated has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.302"/>
  <testcase name="Guest with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.243"/>
  <testcase name="Guest with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.198"/>
  <testcase name="User bob with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.259"/>
  <testcase name="User bob with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.196"/>
  <testcase name="User bob with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.233"/>
  <testcase name="User bob with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.181"/>
  <testcase name="User bob with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.163"/>
  <testcase name="User joe with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.144"/>
  <testcase name="User joe with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.14"/>
  <testcase name="User joe with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.136"/>
  <testcase name="User joe with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.135"/>
  <testcase name="User joe with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.136"/>
  <testcase name="User root with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.153"/>
  <testcase name="User root with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.12"/>
  <testcase name="User root with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.122"/>
  <testcase name="User root with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.121"/>
  <testcase name="User root with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.118"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@53849ee4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@27dbb592
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@496d98af
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3a432ed2
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7d3c6a55, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@96932af, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@597e83fc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@10b434b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@a6ef176, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@79ae7f53, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2f29608e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@458222d2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@62bc2ca4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@7280c708
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No identity (PrincipalCollection) found in the context.  Looking for a remembered identity.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No remembered identity found.  Returning original context.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1015ee3d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@fcbef0b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@15bac347
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@186a7576
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@49af632b.after() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7baf88be
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@413ab162
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7453ba62
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@24f1b398
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@5f7c5d9b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5de59c16, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@d6a9883, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@5142c756, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@772d08c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2d9b7df1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3b69709b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@75fee96, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2b28bda2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@645c1312
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@c877844
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@11e8bec9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4745874e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@25b63670
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15e63c41.after() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@63fba319
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1d90f197
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@16e4ffab
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@144d3f4b
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@386d3603, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@9f51be6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3afa9e25, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1ba4ad63, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@58734cc2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@79b481eb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@39bda9b9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@52d1ce4c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4c3f0a0e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@25cf9e7f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@45110fca
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6323ba32
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3e955b77
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3fa801ba
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed authentication challenge on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.authenticated was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e57449e.after() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@652d03dc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@6e589468
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@79777070
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1077075d
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@71a1700d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1dc39fc3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@162dca79, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1847d94f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@150bddfd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3e1b17d6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@64ba0274, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6ff74155, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@51e26ce0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1c141bd3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5daa9431
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@69e74d01
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5070b2f8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@16f5e10a
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6945bbb7.after() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@21ab613c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7a7cbb68
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@12f3e7ab
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4aee9545
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@39f56400, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1d7859ba, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@484ad173, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@27fcfa19, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@518793d1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1bf9a828, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@238ee871, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7b3e64f3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3d55ccbb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@4b4d8b8d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@275f83c0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6fc2c671
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5c725e09
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@587bd049
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2196e0f0.after() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@59d56a94
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@4a48489f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4f97e4d2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7d2fbfd0
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@13c03044, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@2ea0ca7d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3e4dec75, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6ddf1547, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@50ee20ab, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@41a2e40f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2d2ab673, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4f304f2f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6c9ebf46, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@830176e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@574a7ff6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5c171c3f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@713f9b54
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@6eee1e2
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@10977258.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@38351ccb
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [5163fd27-4490-4d84-8c3b-820625365716]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@40023bc4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@52a1e1b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1e81432
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2b85df98
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3c7981e7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@4d3f83b5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@4e007b2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1019399e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6815bc53, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6aff2287, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@143403f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@62ef0f3a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3cd0db94, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@55179dd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@39dc3fb0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2ad9597d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@23823385
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@390472f9
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2b12cf49.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79a62b24
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [0dd4aa08-9b15-442e-8998-5261df8b2d6b]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@b4d241d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@757df1b6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1f881ffd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@21ec2b37
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3637a9c9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6be6ee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2c061379, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@42e88383, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2f122fc6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@52fe884e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@44a6e373, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@289eb63b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4bcdf052, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@62ed088a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2fbaeeb0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@198c7d4b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5675d407
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@51b343e9
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2c517df4.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@29e22a8f
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [f3bd4109-7de5-4aa6-bd03-32076728c0ff]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@96a688a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@28f540da
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7d74bd37
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7b32a639
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@831ebd9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@572f7c3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3ee82600, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7b16ea43, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1d6e13d7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@25d89759, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2eb86778, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4c910f3e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@477fd6b7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@52776f7a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6ce834e4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@e89c98
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2780bf9f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@75a473fb
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2686e6ed.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3b7850e8
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [24fd710e-8b08-4768-a727-80c2092a406d]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@685b4d0e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@422007a8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@44d6c882
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7105f21c
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@71b92c9b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@341fae71, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@bf59773, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@28aa0527, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3238584c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@112cff56, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@212f6fe9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@315c3b04, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1e269ced, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@245d7a82
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1526ea43
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2ddddf8e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@417ffb28
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@394220b0
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@440eca83.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@559bc657
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [fd48cbd5-5b36-44c1-b92f-982097fc740c]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@2a922e8d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@632e40d0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@71a14a8e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1425eaea
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@112da053, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@4a78b1f4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@39eb305e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7fb48906, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@25902a6a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1bd0a86a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1fe0d56a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@61db327f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7dd06209, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@7b00f8f9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@7039bb6d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5e402aaa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@46b12f3d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1a94720d
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4e048dc6.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@441f4175
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [9905da20-ee0a-4289-b937-38da26463547]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@47050cf3
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1c9549f2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@d29bd87
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@2f59f0d1
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@592b8d07, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3a37f44d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2f880917, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@c0cdd62, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@209a531c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@73c663fc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@65ce70c5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@544dc9ba, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3ef6fd93, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@65644dee
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@ac84274
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6182d333
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@53f7eb48
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3977ef09
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@67a9cb9d.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@690e1883
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [fb943372-7ec0-49c1-bad7-6e9c9744b37b]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@53265854
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7a711d71
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@18442484
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@21b9628e
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6fd9178, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@715960dd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@22e6874e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4cbd23c8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@157846d4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@b72134f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6e51ad67, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@344f7dc6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4eca6cfe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2febecda
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4c436559
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@5cb2dd2c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@62d6a33f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7977afca
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@112740e8.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5ae051e9
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [f6979924-e122-4dfd-a932-fdbfbadb458b]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@74760977
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@71679f5c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@4a0f8b2e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@427a9efe
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2e87d09c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5690c9a1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3ba5956d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@73f545b2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6bb2e497, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2dbdacbe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7f980567, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@558aeea2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1438f98e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1fc0b14c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5238d3a5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@10cf1fcf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@e3157a8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@4971dddf
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@33f46cf7.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@2ef8ee5f
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [6af21f1a-87e4-4381-a99f-78207930db27]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4b9cc11
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@42047283
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@31fa1851
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@1a528779
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@4cff51f1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@e5cccb5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@6e838670, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7cef5bbe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@46705706, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@79616f0a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6bc137c7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5a352115, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@560f17f7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@197d1423
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@23b5810f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@612c1219
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@14585926
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3444d839
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@5b988d3f.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64b61bf
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [b0ff29dc-216c-4dc7-8763-3ef7ecdd2f9d]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@46e3644a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7acd5aa1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3ff93f03
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@497fec5
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@c182989, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@64ee793, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@26456721, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@1675bb28, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@b524a9d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@47a08f39, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7e1b0beb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@21abb1fb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f31e702, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2af426a0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@28a13626
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6fea0da0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6f24bcc6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@54e5a42b
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3913e70e.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@44b0dac3
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [5ea580be-7d77-4959-9ba5-91fdc27d0aff]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@76bd48ef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@4ff7fd0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@22203340
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7004c040
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@4c438fce, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6796447f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3a6b22fa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4fc5690c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2973bbbe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6d2acc34, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@14c4a1ea, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7962144c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1622c7d6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@4c7305e4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4776d266
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@49ef4b31
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7d31a3e2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@45fe8aa4
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@502aeaed.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@79cda784
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [b2299664-5bea-483d-8ed1-370cf65a7a77]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@1aec2c1f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@744b508
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2fc923f2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3e56fd60
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3bbf7d30, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@18b3f8f5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@4f9da97e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@77e2b807, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@45a0110e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@fbfd1d8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7a69c3fb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@35c1d286, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@47e476fc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3510ae90
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@11a82d11
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@3826c025
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7810d9ef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1a54177e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@46aecc14.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5e223ed2
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [7992df19-1c01-43ac-9583-f034efbbc307]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@10668c26
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3c7b1b33
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3636d04a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@48a4c614
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@16452e85, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@17f1292f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@59c6d8f0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@dcca29c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@75c7b6d7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@ab519aa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@77a7ed63, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@31d23bf4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@615e29b9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@49ab0137
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@48ce88f6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6f81f3d1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3cae5788
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@59f4c0d7
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@7be85864.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4053ee53
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [04250998-d4c3-47a0-a139-9d3b6b866e11]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.SNAPSHOT
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-02-26T09:13:13.965+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@4da51df
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@193509f6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@69210267
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7624ee1c
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@71a8da44, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@491e0a8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@53437f0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2744703b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7e2445a0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7f574c12, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c43730e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7036bb0a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1931c714, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2f48ac73
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.SNAPSHOT.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@46d597e6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@70e7a15e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@77135c3a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@180c20e9
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@202b9f72.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6317216a
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [c11113c4-c5ed-4210-be3c-d162d7f67bea]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
]]></system-err>
</testsuite>
