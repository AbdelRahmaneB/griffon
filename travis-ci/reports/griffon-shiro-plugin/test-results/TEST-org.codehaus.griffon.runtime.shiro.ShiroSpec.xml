<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.shiro.ShiroSpec" tests="20" failures="0" errors="0" timestamp="2014-06-08T12:23:21" hostname="testing-worker-linux-11-1-26838-linux-4-27062689" time="4.777">
  <properties/>
  <testcase name="Guest with guest has outcome guest" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="1.888"/>
  <testcase name="Guest with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.276"/>
  <testcase name="Guest with authenticated has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.23"/>
  <testcase name="Guest with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.207"/>
  <testcase name="Guest with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.208"/>
  <testcase name="User bob with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.203"/>
  <testcase name="User bob with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.159"/>
  <testcase name="User bob with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.161"/>
  <testcase name="User bob with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.154"/>
  <testcase name="User bob with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.139"/>
  <testcase name="User joe with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.121"/>
  <testcase name="User joe with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.114"/>
  <testcase name="User joe with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.113"/>
  <testcase name="User joe with roles has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.115"/>
  <testcase name="User joe with permissions has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.108"/>
  <testcase name="User root with guest has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.127"/>
  <testcase name="User root with user has outcome null" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.101"/>
  <testcase name="User root with authenticated has outcome authenticated" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.102"/>
  <testcase name="User root with roles has outcome roles" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.102"/>
  <testcase name="User root with permissions has outcome permissions" classname="org.codehaus.griffon.runtime.shiro.ShiroSpec" time="0.101"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3458d951
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@35236fb0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2979a711
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@71c7625c
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@6c07b3d6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@6dafde02, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@35188d90, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@5ef6042b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@698bd3c1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@78837dd9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@bb6f5f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@118cc659, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3132060f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@530192b7
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No identity (PrincipalCollection) found in the context.  Looking for a remembered identity.
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - No remembered identity found.  Returning original context.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Bound value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3bb5a60e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@12a8ffc2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@152f2320
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@49ab14bd
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.guest is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@194fe60f.after() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@20700fb1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1d163e1a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1f472be1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7991d0d1
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@7d3d14a7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3517202d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@1418596, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@74a93b7e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@12810908, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5577f5b5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@36a469e9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@64255c05, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@50bc7fa0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@de8e8dd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2ea0ca7d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@3e4dec75
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6ddf1547
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@50ee20ab
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@830176e.after() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@1f1b64ed
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3f7f138f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2fdd31da
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@62f3f7c2
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@36fe4e0d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@71b653af, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@7930407b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4ed98965, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2bcb6e54, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@38b86342, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@517c9f25, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4cb45fee, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@56062999, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@6c8b1edd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1d60e6d8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@44d37df9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@18f389bc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1cd7a270
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed authentication challenge on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.authenticated was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3f968ab9.after() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@192a9621
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3ae65d6f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@6a00409e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@36927b70
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@46ab39e5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@13660da2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@110910a1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6a22c2c3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1020c6a5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@57d182e8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7be97a62, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1d61f77c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@abefcf6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@9d25dcf
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@53ffefa0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@47cd1c75
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6b076a26
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@33ca1baf
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3456dafb.after() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7bac9f86
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@21d55d9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@53ef1aa4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@76be3008
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@163b8a2f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1eed1f10, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@6192634c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@51b5449f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@53ac4ca1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@54db08f1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@782831bc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@16d96b45, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c118abb, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@74f6ab8a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@2a57e9b6
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@71b0c171
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@b6c1c07
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@66a4156c
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@16442115.after() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@638cc502
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2eda395d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@78ec20b2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@5656c423
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@20bbec49, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1195bd69, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@7dc64183, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@62f73ff7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5688a3e3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@24bfb877, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@26e79f7a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3097168a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f48d6f2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@57b35b1e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@52a1e1b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@1e81432
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2b85df98
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@621a8a7a
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@143403f2.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@3d5a463c
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [dd5eb00f-2602-4870-b747-b985c79923e4]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@79089b11
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@23fcb72b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@245d7a82
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7515ff74
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@ff47ad4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@7babfc7a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@584ced04, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@225ccee6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7b136fa9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3907ff5f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3c0ed339, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@714d61fc, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@f5c2181, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@4a6d35ef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@65faa5a9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@2a922e8d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@632e40d0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@71a14a8e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@25902a6a.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@7bd47d66
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [1f5592ae-f651-4e95-9b15-359e8e342997]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@7b00f8f9
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7cd9e285
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@44a6c9cc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@220a934a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@b929312, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@43f588ad, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2ce038b6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@34ab4bbe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@59f9c1f5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1c2ce9f9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@48b4e8e2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5d2572b8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@458ebdce, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@5629fa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@1820af83
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@9e2cdd5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@9376005
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1280ecfd
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@300c2443.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@6a826bd1
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [b48313a3-22fc-4bbd-88af-4bd633236f5a]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@310ccf09
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@3fec7107
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@3bf0a35a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@33748874
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2f5b6cc8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@1b42d6c2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@41216889, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@78561bc6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@5d39a1e2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@72b32c3e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@511dd546, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7d9d1044, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@529720c9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@1a38b290
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@479cdb17
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@af3e7bc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@12f2ed42
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@ab691c6
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4c45d8fb.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@64157d2
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [e3d211fa-f282-4d07-828a-60d64d2c4304]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3bc7e3cc
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@403c84bd
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@452eb53d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@7d7cdb46
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@293dead6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@20049cc1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@ecf5353, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4d6775bd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4362f2fe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@153f2442, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@646573f3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@409f8a03, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@2a1dec1a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@74677ac4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@64411576
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@6ce82965
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@7df5ddbe
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@18b1258d
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [bob] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [bob].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - bob, rememberMe=false].  Returned account [bob]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [bob].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [bob]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@23364534.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal bob
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [bob]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@4ebdd26d
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [f27fc49e-5227-44a0-a912-c9c2007183c4]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@63d94e88
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@4fb2f5ee
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@6e300522
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@12a133b2
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@68b7531e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@5bb20c47, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@6443859, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@68cf5e45, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@63639c5, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@520ab7b2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3da23132, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@634be93a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@cbd11c4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@10efd3fa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@41e6ac28
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@f3097e5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3f44432d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@1a965fce
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@c4b4dd9.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@23f96f01
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [5d793d66-af88-408d-8349-0a49d0b242ae]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@40891d67
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@69e9764a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@5e552a98
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@295f918a
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@68be77ef, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@30b421a2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@20c2ba9, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6d06654b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3ee456d8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1019f2a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@11787eea, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7dd43d9b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7918cba6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@7e02856c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@16d739de
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@c182989
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@64ee793
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@26456721
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@15353c19.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@313e868
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [735b164f-1d18-4060-814e-5997aa058764]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@2fbcfda8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@20b13914
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@531a60d0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@68ca224f
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@1de2d8db, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@180b2131, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2b0244c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@7a1efaf4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7ede7cf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@140dcb1a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1591223f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6b5f6128, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@42e3c02a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@8bae7aa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@3dbd89ef
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@66aac993
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5698068d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@16d63f65
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@37fb8c0b.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@16c75b8a
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [a7506992-d007-4325-99cf-c5d9b96acda3]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@44c57c25
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@1598469
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@1c040a30
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4d38e3ae
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@53c01def, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@69ed60dd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@5f72837f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@571737cd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@3550a066, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4052a3e2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@71856b6b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6e4f7806, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@23510a7e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3d80023a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@4b4bb49e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@573f17b0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@6f2c508f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@465d154e
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.roles due to lack of roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.roles was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@4230a8f8.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@403aa539
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [1d954fcb-63f3-42a2-b84d-f5434f4ee28c]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@22203340
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@7004c040
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@47e9e334
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@4c438fce
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@3a6b22fa, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@4fc5690c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2973bbbe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@6d2acc34, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@14c4a1ea, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@7962144c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1622c7d6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@456dbdf4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@27d201c8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@3e4487e2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@7d31a3e2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@45fe8aa4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@4a4038e2
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3e56a383
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [joe] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [joe].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - joe, rememberMe=false].  Returned account [joe]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [joe].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [joe]
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject was not granted access to com.acme.ShiroController.permissions due to lack of permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.permissions was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@6e4a6525.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal joe
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [joe]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1aec2c1f
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [9381d1fd-3960-4763-ab9f-9f909d21290d]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@2f9bdbb5
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2175607e
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@2112015b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@25170e53
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@52363f8d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@67866c25, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@2a26263c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@2e9842c2, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@e46e674, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@50c3d0fe, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@67cdfd1e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4a4f1d0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@68ff9111, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@2ac5f11
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@491e0a8
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@53437f0
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@2744703b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7e2445a0
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.guest with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.guest
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44.before() on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=GUEST, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed guest challenge on com.acme.ShiroController.guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.guest was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.guest is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@3b007e44.after() on com.acme.ShiroController.guest
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@62eff55a
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [67f02afd-0507-41ab-8637-aa16d90717b3]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@622410f1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@2dd4708d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@5629507c
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@32632915
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@14d728e4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@39bd9b6c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@4f26ed11, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@4961fb0, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@1bfa5e2a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@523c25bf, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6ad248c6, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@13a7f5f4, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@78047040, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@4f9db2da
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@42bab618
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@700903e1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@5fdde23d
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@603043f6
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.user with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.user
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa.before() on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=USER, values=[], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Subject did not meet expected security requirements.
[Test worker] INFO org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler - Subject failed user challenge on com.acme.ShiroController.user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Execution of com.acme.ShiroController.user was aborted by org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.user is ABORTED
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@ac03bfa.after() on com.acme.ShiroController.user
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@491277d1
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [8039c137-8c03-42eb-ac59-9967418ad29f]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@3bdac141
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@16c5b11a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@cee2da4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@68f6709d
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@2690103a, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@3c19639d, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@26daf73e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@719e1b5f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4317343f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@28673682, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@102ba587, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@21804a5c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6d91ef32, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@7cf20761
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@6f058ec
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@d5df183
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@129ad650
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@736c27ba
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.authenticated with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.authenticated
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5.before() on com.acme.ShiroController.authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=AUTHENTICATION, values=[], logical=AND}
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.authenticated is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@95ac5d5.after() on com.acme.ShiroController.authenticated
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1a44946c
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [3a59ac86-8d03-41c0-b099-af43c4b18126]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@19ecbafa
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@4e78062
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@7a9da471
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@397359b
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@23897e13, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@17b4239f, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@338ea7e1, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@5aafbf38, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@4833240b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@15837335, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@6900a79b, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@29fbe6f8, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@58f8b950, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@42c10b8a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@74d4947b
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@30605329
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3f3c18f
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@7828954f
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.roles with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.roles
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55.before() on com.acme.ShiroController.roles
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=ROLES, values=[manager], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.roles is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@2f41eb55.after() on com.acme.ShiroController.roles
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@5725a42b
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [b775afc2-2231-4c80-a8d7-f4ef058271e9]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Griffon 2.0.0.BETA
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Build: 2014-06-08T12:15:07.356+0000
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - JVM: 1.7.0_51 (Oracle Corporation 24.51-b03)
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - OS: Linux 2.6.32-042stab079.5 amd64
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating module bindings
[Test worker] DEBUG griffon.util.AnnotationUtils - Current module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'core'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'core', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$InnerClasses'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$InnerClasses', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - Processing module 'testApplicationBootstrapper$Fields'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding module 'testApplicationBootstrapper$Fields', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - module dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed module order is [core, shiro, testApplicationBootstrapper$InnerClasses, testApplicationBootstrapper$Fields]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from core:org.codehaus.griffon.runtime.core.DefaultApplicationModule@909da10
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from shiro:org.codehaus.griffon.runtime.shiro.ShiroModule@65cb5512
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$InnerClasses:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$InnerClassesModule@83e44f4
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Loading module bindings from testApplicationBootstrapper$Fields:org.codehaus.griffon.runtime.core.TestApplicationBootstrapper$FieldsModule@3020f366
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - InstanceBinding[source=griffon.core.GriffonApplication, instance=org.codehaus.griffon.runtime.core.DefaultGriffonApplication@23c2eab3, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationClassLoader, target=org.codehaus.griffon.runtime.core.DefaultApplicationClassLoader, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ApplicationConfigurer, target=org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceHandler, target=org.codehaus.griffon.runtime.core.resources.DefaultResourceHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.util.CompositeResourceBundleBuilder, target=org.codehaus.griffon.runtime.util.DefaultCompositeResourceBundleBuilder, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=java.util.ResourceBundle, classifier=@javax.inject.Named(value=applicationResourceBundle), provider=org.codehaus.griffon.runtime.util.ResourceBundleProvider@51bea01c, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.Configuration, target=org.codehaus.griffon.runtime.core.DefaultConfiguration, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.ExecutorServiceManager, target=org.codehaus.griffon.runtime.core.DefaultExecutorServiceManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, classifier=@javax.inject.Named(value=applicationEventRouter), target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventRouter, target=org.codehaus.griffon.runtime.core.event.DefaultEventRouter, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.resources.ResourceResolver, classifier=@javax.inject.Named(value=applicationResourceResolver), provider=org.codehaus.griffon.runtime.core.resources.ResourceResolverProvider@3a01b831, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.i18n.MessageSource, classifier=@javax.inject.Named(value=applicationMessageSource), provider=org.codehaus.griffon.runtime.core.i18n.MessageSourceProvider@46e3b6b7, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.resources.ResourceInjector, classifier=@javax.inject.Named(value=applicationResourceInjector), target=org.codehaus.griffon.runtime.core.resources.DefaultApplicationResourceInjector, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.threading.UIThreadManager, target=org.codehaus.griffon.runtime.core.threading.DefaultUIThreadManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.mvc.MVCGroupManager, target=org.codehaus.griffon.runtime.core.mvc.DefaultMVCGroupManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Initialize), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@ff0ccbd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Startup), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@a119478, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Ready), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@82a5772, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Shutdown), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@13d3018e, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderBinding[source=griffon.core.LifecycleHandler, classifier=@javax.inject.Named(value=Stop), provider=org.codehaus.griffon.runtime.core.LifecycleHandlerProvider@20b1bcd, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.view.WindowManager, target=org.codehaus.griffon.runtime.core.view.NoopWindowManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionManager, target=org.codehaus.griffon.runtime.core.controller.DefaultActionManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactManager, target=org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonModel), target=org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonView), target=org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonController), target=org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.artifact.ArtifactHandler, classifier=@griffon.inject.Typed(value=interface griffon.core.artifact.GriffonService), target=org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=griffon.core.PlatformHandler, providerType=class org.codehaus.griffon.runtime.core.PlatformHandlerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.addon.AddonManager, target=org.codehaus.griffon.runtime.core.addon.DefaultAddonManager, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.event.EventHandler, target=org.codehaus.griffon.runtime.core.event.DefaultEventHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.GriffonExceptionHandler, target=griffon.core.GriffonExceptionHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.mgt.SecurityManager, providerType=class org.codehaus.griffon.runtime.shiro.SecurityManagerProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - ProviderTypeBinding[source=org.apache.shiro.subject.Subject, providerType=class org.codehaus.griffon.runtime.shiro.SubjectProvider, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.plugins.shiro.SecurityFailureHandler, target=org.codehaus.griffon.runtime.shiro.DefaultSecurityFailureHandler, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - TargetBinding[source=griffon.core.controller.ActionInterceptor, target=org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor, singleton=true]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Creating application injector
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationBootstrapper - Injector will be created by org.codehaus.griffon.runtime.injection.GuiceInjectorFactory@732e9042
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupConfigurationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.MVCGroupExceptionHandler on UncaughtMVCGroupInstantiationException
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapStart' synchronously
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading java.beans.PropertyEditor definitions from jar:file:/home/travis/build/griffon/griffon/subprojects/griffon-core/build/libs/griffon-core-2.0.0.BETA.jar!/META-INF/editors/java.beans.PropertyEditor
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.StringPropertyEditor as editor for java.lang.String
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FilePropertyEditor as editor for java.io.File
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URLPropertyEditor as editor for java.net.URL
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.URIPropertyEditor as editor for java.net.URI
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigDecimalPropertyEditor as editor for java.math.BigDecimal
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BigIntegerPropertyEditor as editor for java.math.BigInteger
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for java.lang.Boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for java.lang.Byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for java.lang.Short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for java.lang.Integer
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for java.lang.Long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for java.lang.Float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for java.lang.Double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.CalendarPropertyEditor as editor for java.util.Calendar
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DatePropertyEditor as editor for java.util.Date
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BooleanPropertyEditor as editor for boolean
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.BytePropertyEditor as editor for byte
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.ShortPropertyEditor as editor for short
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.IntegerPropertyEditor as editor for int
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.LongPropertyEditor as editor for long
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.FloatPropertyEditor as editor for float
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer - Registering griffon.core.editors.DoublePropertyEditor as editor for double
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$2 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform.handler.linux64
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=platform
[Test worker] DEBUG org.codehaus.griffon.runtime.core.PlatformHandlerProvider - Using org.codehaus.griffon.runtime.core.DefaultPlatformHandler as PlatformHandler
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [START]
[Test worker] DEBUG griffon.util.AnnotationUtils - computed addon order is []
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.addon.AbstractAddonManager - Loading addons [END]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'LoadAddonsEnd' synchronously
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=mvcGroups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.DefaultApplicationConfigurer$3 on NewInstance
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro.realm.resource.path
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=shiro
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading user security information from file [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Opening input stream for path [classpath:shiro-users.properties]...
[Test worker] DEBUG org.apache.shiro.io.ResourceUtils - Opening resource from class path [shiro-users.properties]
[Test worker] DEBUG org.apache.shiro.realm.text.PropertiesRealm - Loading properties from path [classpath:shiro-users.properties]...
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.joe], value: [joe,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.bob], value: [bob,manager,employee].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.administrator], value: [*].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.manager], value: [user:write].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [user.root], value: [root,administrator,manager].
[Test worker] TRACE org.apache.shiro.realm.text.PropertiesRealm - Processing properties line - key: [role.employee], value: [user:read].
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.util.ThreadContext - Retrieved value of type [org.apache.shiro.subject.support.DelegatingSubject] for key [org.apache.shiro.util.ThreadContext_SUBJECT_KEY] bound to thread [Test worker]
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.controller.action.interceptor.order
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG griffon.util.AnnotationUtils - Current interceptor order is [shiro]
[Test worker] TRACE griffon.util.AnnotationUtils - Processing interceptor 'shiro'
[Test worker] TRACE griffon.util.AnnotationUtils -   depends on '[]'
[Test worker] TRACE griffon.util.AnnotationUtils -   adding interceptor 'shiro', since all dependencies have been added
[Test worker] TRACE griffon.util.AnnotationUtils - interceptor dependency ordering complete
[Test worker] DEBUG griffon.util.AnnotationUtils - computed interceptor order is [shiro]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'model': org.codehaus.griffon.runtime.core.artifact.ModelArtifactHandler@5a4cbe6a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'view': org.codehaus.griffon.runtime.core.artifact.ViewArtifactHandler@64694f76
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'controller': org.codehaus.griffon.runtime.core.artifact.ControllerArtifactHandler@3ddfff7a
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Registering artifact handler for type 'service': org.codehaus.griffon.runtime.core.artifact.ServiceArtifactHandler@3cfdc252
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonController definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonController
[Test worker] DEBUG griffon.util.ServiceLoaderUtils - Reading griffon.core.artifact.GriffonModel definitions from file:/home/travis/build/griffon/griffon/plugins/griffon-shiro-plugin/build/classes/test/META-INF/griffon/griffon.core.artifact.GriffonModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'controller' = 1
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.DefaultArtifactManager - Artifacts of type 'model' = 1
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroController), instance=Artifact[controller] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroController, target=com.acme.ShiroController, singleton=false]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - InstanceBinding[source=griffon.core.artifact.GriffonClass, classifier=@griffon.inject.Typed(value=class com.acme.ShiroModel), instance=Artifact[model] > Shiro, singleton=true]
[Test worker] TRACE org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - TargetBinding[source=com.acme.ShiroModel, target=com.acme.ShiroModel, singleton=false]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'BootstrapEnd' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroController
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Authenticated.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Authenticated.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Authenticated.name = Authenticated
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.authenticated with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.authenticated stored as authenticated
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Guest.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Guest.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Guest.name = Guest
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.guest with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.guest stored as guest
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Permissions.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Permissions.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Permissions.name = Permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.permissions with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.permissions stored as permissions
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.Roles.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.Roles.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.Roles.name = Roles
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.roles with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.roles stored as roles
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=com.acme.ShiroController.action.User.name
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.action.User.name
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - com.acme.ShiroController.action.User.name = User
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Configuring action com.acme.ShiroController.user with org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Action for com.acme.ShiroController.user stored as user
[Test worker] DEBUG org.codehaus.griffon.runtime.core.artifact.AbstractArtifactManager - Searching for griffonClass of com.acme.ShiroModel
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'NewInstance' synchronously
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.authc.AbstractAuthenticator - Authentication attempt received for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false]
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - Looked up AuthenticationInfo [root] from doGetAuthenticationInfo
[Test worker] DEBUG org.apache.shiro.realm.AuthenticatingRealm - AuthenticationInfo caching is disabled for info [root].  Submitted token: [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Performing credentials equality check for tokenCredentials of type [[C and accountCredentials of type [java.lang.String]
[Test worker] DEBUG org.apache.shiro.authc.credential.SimpleCredentialsMatcher - Both credentials arguments can be easily converted to byte arrays.  Performing array equals comparison
[Test worker] DEBUG org.apache.shiro.authc.AbstractAuthenticator - Authentication successful for token [org.apache.shiro.authc.UsernamePasswordToken - root, rememberMe=false].  Returned account [root]
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - Context already contains a SecurityManager instance.  Returning.
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] DEBUG org.apache.shiro.subject.support.DefaultSubjectContext - No SecurityManager available in subject context map.  Falling back to SecurityUtils.getSecurityManager() lookup.
[Test worker] TRACE org.apache.shiro.util.ThreadContext - get() - in thread [Test worker]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = true; session is null = true; session has id = false
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - Starting session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractValidatingSessionManager - No sessionValidationScheduler set.  Attempting to create default instance.
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Created default SessionValidationScheduler instance of type [org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler].
[Test worker] INFO org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Enabling session validation scheduler...
[Test worker] TRACE org.apache.shiro.session.mgt.DefaultSessionManager - Creating session for host null
[Test worker] DEBUG org.apache.shiro.session.mgt.DefaultSessionManager - Creating new EIS record for new session instance [org.apache.shiro.session.mgt.SimpleSession,id=null]
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.mgt.DefaultSecurityManager - This org.apache.shiro.mgt.DefaultSecurityManager instance does not have a [org.apache.shiro.mgt.RememberMeManager] instance configured.  RememberMe services will not be performed for account [root].
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon.disable.threading.injection
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=griffon
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing com.acme.ShiroController.permissions with policy OUTSIDE_UITHREAD
[Test worker] DEBUG org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Executing 1 interceptor for com.acme.ShiroController.permissions
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45.before() on com.acme.ShiroController.permissions
[Test worker] DEBUG org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor - Evaluating security requirement RequirementConfiguration{requirement=PERMISSIONS, values=[user:write], logical=AND}
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.realm.AuthorizingRealm - Retrieving AuthorizationInfo for principals [root]
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status before execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Status after execution of com.acme.ShiroController.permissions is OK
[Test worker] TRACE org.codehaus.griffon.runtime.core.controller.AbstractActionManager - Calling org.codehaus.griffon.runtime.shiro.ShiroActionInterceptor@725dfc45.after() on com.acme.ShiroController.permissions
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] DEBUG org.apache.shiro.mgt.DefaultSecurityManager - Logging out subject with primary principal root
[Test worker] TRACE org.apache.shiro.realm.CachingRealm - Cleared cache entries for account with principals [root]
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] TRACE org.apache.shiro.subject.support.DelegatingSubject - attempting to get session; create = false; session is null = false; session has id = true
[Test worker] TRACE org.apache.shiro.session.mgt.AbstractValidatingSessionManager - Attempting to retrieve session with key org.apache.shiro.session.mgt.DefaultSessionKey@1d32c800
[Test worker] DEBUG org.apache.shiro.session.mgt.AbstractSessionManager - Stopping session with id [1118341a-81ef-4c6b-8368-83e7eb9a0f35]
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownRequested' synchronously
[Test worker] INFO org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown is in process
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 1: notify all event listeners
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Adding listener org.codehaus.griffon.runtime.core.AbstractGriffonApplication$1 on ShutdownStart
[Test worker] DEBUG org.codehaus.griffon.runtime.core.event.AbstractEventRouter - Triggering event 'ShutdownStart' synchronously
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 2: notify all shutdown handlers
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 3: destroy all MVC groups
[Test worker] DEBUG org.codehaus.griffon.runtime.core.DefaultGriffonApplication - Shutdown stage 4: execute Shutdown script
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application.lifecycle.handler.disable
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=application
]]></system-err>
</testsuite>
